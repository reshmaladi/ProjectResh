@*@model IEnumerable<HackathonPMA.Models.Inventory> *@

@model PagedList.IPagedList<HackathonPMA.Models.Inventory>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Inventories";
}

<h3>Inventories</h3>

<p>
    @Html.ActionLink("Create New Inventory", "Create")
</p>
@using (Html.BeginForm("Index", "Inventories", FormMethod.Get))
{
    <p>
        @Html.TextBox("searchBy", ViewBag.CurrentFilter as string)
        <input type="submit" class="btn btn-default" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortBy = ViewBag.NameSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Description", "Index", new { sortBy = ViewBag.DescriptionSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Quantity", "Index", new { sortBy = ViewBag.QuantitySort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Price", "Index", new { sortBy = ViewBag.PriceSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortBy = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))